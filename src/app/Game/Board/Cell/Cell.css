.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  background-color: grey;
  --border-size: calc(var(--cell-size) / 8);
  border-top: var(--border-size) solid #aaa;
  border-left: var(--border-size) solid #aaa;
  border-bottom: var(--border-size) solid #444;
  border-right: var(--border-size) solid #444;
}

.cell.open:hover {
  border-color: white !important;
}

.cell:not(.open):hover {
  border-color: white !important;
}

.cell.open {
  animation: flash_green 300ms ease-in-out;
  svg {
    animation: pop 100ms ease-in-out;
  }
}

@keyframes flash_green {
  0% {
    background-color: grey;
  }

  50% {
    background-color: rgb(106, 134, 106);
  }

  100% {
    background-color: grey;
  }
}

@keyframes pop {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.05);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes pop_big {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}

.cell:not(.open) {
  &:hover {
    cursor: pointer;
    filter: contrast(0.8);
  }
  &:active {
    cursor: pointer;
    filter: contrast(1.5);
  }
}

.cell {
  display: flex;
  justify-content: center;
  align-items: center;
}

.cell.open:not(.mine) {
  border: calc(var(--border-size) / 2) solid #555;
  padding: calc(var(--border-size) / 2);
}

.cell.open.mine {
  border: calc(var(--border-size) / 2) solid #333;
  padding: calc(var(--border-size) / 2);
  background-color: #a00;
}

.cell svg {
  width: 90%;
  height: 90%;
}

.cell svg.mine {
  width: 100%;
  height: 100%;
}

/* hide SVGs by default */
.cell svg {
  display: none;
}

/* show flag when flagged OR if the game is won */
.cell.flagged .flag,
.game:has(.won) .cell:not(.open) .flag {
  display: initial;
}

/* show numbers when cell is open, unless its a mine */
.cell.open:not(.mine) .number {
  display: initial;
}

/* show mine when open, or game lost */
:is(.cell.open.mine, .game:has(.lost) .cell.mine:not(.flagged)) svg.mine {
  display: initial;
}
